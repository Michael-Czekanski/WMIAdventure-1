name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test-django:
    runs-on: ubuntu-latest
    name: Tests for Django backend app
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./WMIAdventure/backend/requirements.txt
    - name: Run Django tests
      run: |
        python ./WMIAdventure/backend/WMIAdventure_backend/manage.py test


  deploy:
    runs-on: ubuntu-latest
    needs: test-django
    name: Deploy Docker containers to Azure Virtual Mashine
    env:
      SERVER_IP: 40.114.238.18
      SERVER_USER: azureuser
      ACR_SERVER: wmiadventure.azurecr.io
    steps:
    - uses: actions/checkout@v2

    - name: Docker compose build and push to ACR
      run: |
        docker login -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }} ${{ env.ACR_SERVER }}
        cd ./WMIAdventure/
        docker-compose build
        docker push ${{ env.ACR_SERVER }}/wmiadventure:v1
        docker push ${{ env.ACR_SERVER }}/frontend:v1

    - name: Pull backend docker image from ACR on server and run using ssh
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: docker pull ${{ env.ACR_SERVER }}/wmiadventure:v1; docker container stop wmi-adventure; docker container rm wmi-adventure; docker image prune -f; docker run -d --name=wmi-adventure -p 8000:8000 -d ${{ env.ACR_SERVER }}/wmiadventure:v1
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USER }}
        privateKey: ${{ secrets.SERVER_KEY}}

    - name: Pull frontend docker image from ACR on server and run using ssh
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: docker pull ${{ env.ACR_SERVER }}/frontend:v1; docker container stop wmi-adventure-frontend; docker container rm wmi-adventure-frontend; docker image prune -f; docker run -d --name=wmi-adventure-frontend -p 80:80 -d ${{ env.ACR_SERVER }}/frontend:v1
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USER }}
        privateKey: ${{ secrets.SERVER_KEY}}
