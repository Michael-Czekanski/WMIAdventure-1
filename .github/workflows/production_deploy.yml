name: Production Deployment

on: 
  workflow_dispatch:
        
jobs:
  test-django:
    runs-on: ubuntu-latest
    name: Tests for Django backend app
    strategy:
      max-parallel: 4

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./WMIAdventure/backend/requirements.txt
    - name: Run Django tests
      run: |
        python ./WMIAdventure/backend/WMIAdventure_backend/manage.py test ./WMIAdventure/backend/WMIAdventure_backend/

  test-frontend:
  
    runs-on: ubuntu-latest
    name: Tests for React frontend app
    strategy:
      max-parallel: 4
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install JS dependencies
      run: |
        cd ./WMIAdventure/frontend
        npm install
    - name: Test
      run: |
        cd ./WMIAdventure/frontend
        npm run test -- --passWithNoTests

  deploy:
    runs-on: ubuntu-latest
    needs: [test-django, test-frontend]
    name: Connect to VM, build docker and run server
    env:
      SERVER_IP: wmiadventure.projektstudencki.pl
      SERVER_USERNAME: runner
      DB_ADDR: psql.wmi.amu.edu.pl
    steps:
    - name: SSH - Pull repo, build Docker-compose image and run server
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: cd ~/WMIAdventure/WMIAdventure; docker stop $(docker ps -q); docker container rm $(docker ps -aq); docker image prune -f; docker-compose build --build-arg API_URL=${{ env.SERVER_IP }}:8000 --build-arg DB_PASSWD=${{ secrets.PROD_DB_PASSWD }} --build-arg DJANGO_SECRET=${{ secrets.PROD_DJANGO_SECRET }} --build-arg DB_ADDRESS=${{ env.DB_ADDR }} --build-arg DB_PORT=5432 --build-arg DB_USER=wmiadventure --build-arg DB_PASSWD=${{ secrets.DB_PASSWD }} --build-arg DB_NAME=wmiadventure --build-arg DJANGO_DEBUG=False; docker-compose up -d
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USERNAME }}
        privateKey: ${{ secrets.PRODUCTION_SERVER_KEY  }}
