title Create Battle

participant Empty
participant Battle
participant PlayerFactory
participant Coordinator
participant TurnsQueue
participant Outcome
participant ProcessRecorder

# Create Battle call

activate Empty

activate Battle

Empty->Battle: create(attackerModel: UserProfile, defenderModel: UserProfile)

# Get PlayerFactory singleton instance

activate PlayerFactory

Battle->PlayerFactory:get_instance()

deactivate PlayerFactory

# Create Players

activate PlayerFactory

## Create attacker

Battle->PlayerFactory:create(attacker_model, True)

ref over PlayerFactory:CreatePlayer

Battle<--PlayerFactory: attacker: Player

## Create defender

Battle->PlayerFactory:create(defender_model, False)

ref over PlayerFactory:CreatePlayer

Battle<--PlayerFactory: defender: Player

deactivate PlayerFactory

# Create Coordinator

activate Coordinator

Battle->Coordinator: create(attacker, defender)

## Create TurnsQueue

activate TurnsQueue

Coordinator->TurnsQueue: create(attacker, defender)

deactivate TurnsQueue

deactivate Coordinator

# Create Outcome

activate Outcome

Battle->Outcome:create(attacker, defender)

deactivate Outcome

# Create ProcessRecorder

activate ProcessRecorder

Battle->ProcessRecorder:create()

deactivate ProcessRecorder


deactivate Battle